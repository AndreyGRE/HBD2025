import Spiker from "./61-Spiker";
import SpikerTopElem from "./62-SpikerTop";
import { useEffect, useState } from "react";

interface speakerTop {
    image_url?: string;
    text1?: string;
    text2?: string;
    text3?: string;
    url?: string;
    sort_order?: number;
    index?: number;
}

interface speaker {
    image_url: string;
    text1?: string;
    text2?: string;
    text3?: string;
    url?: string;
    sort_order?: number;
    index?: number;
}
function Speakers() {
    const [speakers, setSpeakers] = useState<speaker[]>([]);
    useEffect(() => {
        fetch("https://devnewlk2.gwd.ru:5000/api/speakers")
            .then((res) => res.json())
            .then((data) => {
                if (Array.isArray(data)) {
                    setSpeakers(data);
                } else {
                    console.error("Данные не являются массивом:", data);
                }
            })
            .catch((err) => {
                console.error("Ошибка при получении гостей:", err);
            });
    }, []);

    const [speakersTop, setSpeakersTop] = useState<speakerTop[]>([]);
    useEffect(() => {
        fetch("https://devnewlk2.gwd.ru:5000/api/invited_speakers")
            .then((res) => res.json())
            .then((data) => {
                if (Array.isArray(data)) {
                    setSpeakersTop(data);
                } else {
                    console.error("Данные не являются массивом:", data);
                }
            })
            .catch((err) => {
                console.error("Ошибка при получении гостей:", err);
            });
    }, []);

    return (
        <div id="Speakers" className="mt-[100px] xl:mt-[251px] relative ">
            <div className="flex flex-col gap-0 xl:gap-17 pl-[28px] pr-[25px] xl:pr-[60px] xl:pl-[201px]">
                <div className="flex flex-col ">
                    <div className="gradient text-[32px] xl:text-[74px] font-[750] ">
                        СПИКЕРЫ
                    </div>
                    
                </div>
                <div className="flex flex-wrap gap-x-22 xl:gap-y-15 gap-y-6 xl:items-start justify-center overflow-x-hidden overflow-y-visible relative">
                    <>
                        {speakersTop
                            .sort(
                                (a, b) =>
                                    (a.sort_order ?? 0) - (b.sort_order ?? 0)
                            )
                            .map((speakersTop1, i) => {
                                return (
                                    <SpikerTopElem
                                        key={i}
                                        index={i}
                                        srcImg={speakersTop1.image_url}
                                        text1={speakersTop1.text1}
                                        text2={speakersTop1.text2}
                                        text3={speakersTop1.text3}
                                        url={speakersTop1.url}
                                    />
                                );
                            })}
                    </>
                    <>
                        {speakers
                            .sort(
                                (a, b) =>
                                    (a.sort_order ?? 0) - (b.sort_order ?? 0)
                            )
                            .map((speakerObj, index) => {
                                return (
                                    <Spiker
                                        key={index}
                                        index={index}
                                        srcImg={speakerObj.image_url}
                                        text1={speakerObj.text1}
                                        text2={speakerObj.text2}
                                        text3={speakerObj.text3}
                                        url={speakerObj.url}
                                    />
                                );
                            })}
                    </>
                    <div className="absolute xl:bottom-0 -top-1 -left-10  xl:left-0 opacity-45 xl:w-[390px] xl:h-[487px] w-[20%] h-[20%]">
                        <svg
                            viewBox="0 0 390 487"
                            fill="none"
                        >
                            <path
                                d="M111.256 387.011C114.742 394.052 117.872 401.232 121.617 408.151C130.269 424.133 139.398 437.107 150.189 451.603C151.472 453.328 153.625 455.914 153.17 458.205C152.418 461.997 131.246 483.167 126.674 485.765C125.598 486.376 124.29 486.958 123.042 486.564C120.043 485.618 109.85 465.527 107.769 461.654C98.7724 444.907 89.4289 428.469 79.9423 412.001C74.2986 402.203 68.8651 391.78 62.1451 382.678C58.6244 377.909 53.5857 375.418 48.6093 372.418C47.3109 371.635 45.6988 370.814 44.6129 369.76C43.8089 368.979 43.4338 367.558 42.8703 366.595C41.9405 365.006 37.332 365.027 35.5748 364.497C25.0272 361.307 18.1837 352.935 13.0787 343.569C4.05597 327.012 -3.38615 304.877 2.28378 286.24C4.39644 279.296 8.45448 273.31 13.5938 268.242C21.6869 260.261 31.6769 254.481 41.5369 248.976C57.8776 239.855 80.6364 228.733 94.2394 216.434C98.0365 213.001 100.633 208.155 103.425 203.887L114.509 186.742C123.308 173.005 131.891 159.166 140.237 145.135C161.305 109.717 179.381 72.5608 200.502 37.202C208.887 23.1639 216.079 11.7572 230.917 3.80564C252.46 -8.21188 277.165 18.0662 287.126 34.6869C288.643 37.1734 290.18 39.5748 291.696 42.071C332.454 109.21 351.131 187.302 371.241 262.443C375.248 278.28 380.087 294.285 383.643 310.204C387.98 329.632 394.116 351.341 384.86 370.27C381.804 376.52 376.462 381.733 368.967 380.381C340.005 374.815 310.531 367.848 281.927 360.854C236.948 349.857 192.506 345.95 146.554 342.616C143.292 342.38 140.103 341.358 137.156 339.904C132.549 342.045 128.587 344.958 124.443 346.811C121.298 348.216 113.469 349.91 109.884 350.739L88.8723 355.617C98.7957 365.602 105.379 373.955 111.256 387.011ZM234.287 4.73351C249.493 4.83793 259.833 11.0675 271.69 20.458C272.947 21.4537 277.364 25.8152 278.411 26.1694C269.224 14.3125 250.604 -2.91844 234.287 4.73351ZM227.878 7.63446C221.045 11.1845 214.856 18.3461 210.546 24.6783C196.283 45.6325 184.693 68.2933 172.657 90.5596C155.117 123.009 136.901 154.733 116.993 185.805L105.883 202.983C102.642 207.952 98.3026 213.312 96.5298 218.999C93.9966 227.127 90.7501 241.325 91.0526 249.805C91.5568 263.943 100.307 283.001 106.989 295.537C112.908 306.643 131.063 336.32 142.905 339.845C147.771 341.294 153.662 341.228 158.723 341.579L183.052 343.241C204.053 344.756 224.968 347.276 245.677 351.086C247.492 351.42 249.36 351.703 251.155 352.103C290.876 359.152 329.553 371.304 369.317 377.92C373.349 378.591 377.913 376.864 380.119 373.297C379.47 373.26 379.822 373.195 379.272 373.479C366.717 379.955 352.241 363.151 345.28 354.581C323.218 327.388 309.866 294.929 295.058 263.608C270.136 210.892 245.98 156.66 232.686 99.6645C226.092 71.3936 220.346 35.7482 230.182 7.66577L229.95 7.30912C228.868 7.29954 228.916 7.30559 227.878 7.63446ZM232.341 6.66754C220.921 35.9184 229.053 77.81 236.296 107.281C239.573 120.616 244.54 137.722 249.349 150.707C264.631 154.778 281.77 156.684 297.464 158.845C301.997 159.469 306.964 159.084 311.261 160.481C314.59 161.812 318.596 167.343 320.337 170.577C326.229 182.046 331.805 197.07 329.09 210.023C328.391 213.356 324.61 215.693 322.655 218.057C312.587 230.231 302.437 243.964 293.969 257.204C298.276 266.954 302.823 276.445 307.373 286.074C318.83 310.32 330.598 333.014 347.407 353.982C353.09 360.536 363.996 371.984 372.833 372.225C391.744 372.74 384.867 335.901 383.271 325.46C379.509 300.852 371.969 278.757 365.87 254.853C360.92 236.417 357.33 217.468 352.46 199.237C340.637 155.365 324.584 112.613 304.689 71.7662C297.976 57.9825 290.428 41.6937 279.93 30.482C268.985 18.792 249.247 4.1776 232.341 6.66754ZM249.858 152.418C257.696 174.135 266.702 196.115 275.836 217.318C281.038 229.394 287.204 243.642 293.042 255.453C299.592 245.94 307.063 235.113 314.22 226.029C316.993 222.595 321.176 217.799 323.555 214.322C316.601 208.296 314.642 199.871 312.266 191.249C309.739 182.076 306.543 171.017 307.186 161.486C290.813 159.192 274.454 158.151 258.263 154.15C256.258 153.654 251.807 152.55 249.858 152.418ZM91.3254 221.433C78.8256 231.099 63.6038 238.58 49.9315 246.454C30.9228 257.399 5.30912 269.227 2.66768 293.962C0.534595 313.932 10.163 340.05 23.7652 354.932C32.1078 364.059 40.8958 363.776 52.0682 361.155C63.0647 358.423 74.0043 355.625 84.826 352.277C85.523 352.062 85.622 352.205 86.2662 352.424L86.3453 352.843C85.1609 353.805 83.5988 353.47 82.8221 354.349L83.075 354.261C97.3491 349.409 117.15 347.784 130.018 340.278C113.142 325.86 98.3996 298.172 91.632 277.115C87.2279 263.41 86.6554 242.308 89.3752 228.174C89.6234 226.883 91.9738 221.721 91.6727 221.196L91.3254 221.433ZM308.989 162.643C307.857 171.888 315.454 201.897 321.422 210.221C321.936 210.937 323.196 212.267 324.167 212.419C325.033 212.554 325.315 212.405 325.985 211.867C326.145 211.738 326.462 211.293 326.59 211.12C330.187 200.223 324.118 182.804 319.298 172.761C317.694 169.419 313.509 161.538 308.989 162.643ZM91.382 263.815C93.7576 285.636 114.266 323.021 131.271 337.825C131.681 338.182 132.517 338.734 133.017 339.032C133.67 338.526 134.078 338.37 134.368 337.688C119.18 321.066 107.594 303.593 98.6314 282.87C95.957 276.686 93.9218 269.538 91.382 263.815ZM43.7979 366.531C48.6779 372.208 57.1015 373.849 61.9028 379.82C66.719 385.809 70.5665 392.448 74.4187 399.083C87.102 420.927 99.8917 442.674 111.547 465.094C113.27 468.406 121.243 484.385 124.375 484.78C128.819 483.599 141.239 469.89 144.743 466.083C145.76 464.993 152.222 458.47 151.519 457.303C146.889 449.62 140.817 441.487 135.329 434.2C117.008 409.879 109.723 376.411 86.8124 356.16C74.1621 359.13 61.8182 363.595 48.9807 365.819C47.3081 366.11 45.397 366.21 43.7979 366.531Z"
                                fill="url(#paint0_linear_3635_1226)"
                            />
                            <defs>
                                <linearGradient
                                    id="paint0_linear_3635_1226"
                                    x1="-549.01"
                                    y1="-1126.87"
                                    x2="242.772"
                                    y2="-1253.06"
                                    gradientUnits="userSpaceOnUse"
                                >
                                    <stop
                                        offset="0.128556"
                                        stop-color="#000023"
                                    />
                                    <stop
                                        offset="0.497073"
                                        stop-color="#7E82D7"
                                        stop-opacity="0.9"
                                    />
                                    <stop
                                        offset="0.870922"
                                        stop-color="#E95521"
                                    />
                                </linearGradient>
                            </defs>
                        </svg>
                    </div>
                </div>
            </div>
        </div>
    );
}

export default Speakers;
